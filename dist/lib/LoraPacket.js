import{reverseBuffer as a,asHexString as e}from"./util.js";import{decrypt as F,decryptJoin as u,decryptFOpts as E}from"./crypto.js";import{recalculateMIC as p}from"./mic.js";import{Buffer as i}from"buffer";var A=(s=>(s[s.JOIN_REQUEST=0]="JOIN_REQUEST",s[s.JOIN_ACCEPT=1]="JOIN_ACCEPT",s[s.UNCONFIRMED_DATA_UP=2]="UNCONFIRMED_DATA_UP",s[s.UNCONFIRMED_DATA_DOWN=3]="UNCONFIRMED_DATA_DOWN",s[s.CONFIRMED_DATA_UP=4]="CONFIRMED_DATA_UP",s[s.CONFIRMED_DATA_DOWN=5]="CONFIRMED_DATA_DOWN",s[s.REJOIN_REQUEST=6]="REJOIN_REQUEST",s))(A||{});const g={[0]:"Join Request",[1]:"Join Accept",[2]:"Unconfirmed Data Up",[3]:"Unconfirmed Data Down",[4]:"Confirmed Data Up",[5]:"Confirmed Data Down",[6]:"Rejoin Request"},c=Object.keys(g).reduce((D,t)=>{const n=t,r=g[n];return D[r]=n,D},{}),T={JOIN_REQUEST:{AppEUI:{start:1,end:9},DevEUI:{start:9,end:17},DevNonce:{start:17,end:19}},JOIN_ACCEPT:{AppNonce:{start:1,end:4},NetID:{start:4,end:7},DevAddr:{start:7,end:11},DLSettings:{start:11,end:12},RxDelay:{start:12,end:13}},REJOIN_TYPE_1:{NetID:{start:2,end:5},DevEUI:{start:5,end:13},RJCount0:{start:13,end:15}},REJOIN_TYPE_2:{JoinEUI:{start:2,end:10},DevEUI:{start:10,end:18},RJCount1:{start:13,end:15}}};var M=(n=>(n.V1_0="1.0",n.V1_1="1.1",n))(M||{}),P=(o=>(o[o.FCTRL_ADR=128]="FCTRL_ADR",o[o.FCTRL_ADRACKREQ=64]="FCTRL_ADRACKREQ",o[o.FCTRL_ACK=32]="FCTRL_ACK",o[o.FCTRL_FPENDING=16]="FCTRL_FPENDING",o[o.DLSETTINGS_RXONEDROFFSET_MASK=112]="DLSETTINGS_RXONEDROFFSET_MASK",o[o.DLSETTINGS_RXONEDROFFSET_POS=4]="DLSETTINGS_RXONEDROFFSET_POS",o[o.DLSETTINGS_RXTWODATARATE_MASK=15]="DLSETTINGS_RXTWODATARATE_MASK",o[o.DLSETTINGS_RXTWODATARATE_POS=0]="DLSETTINGS_RXTWODATARATE_POS",o[o.DLSETTINGS_OPTNEG_MASK=128]="DLSETTINGS_OPTNEG_MASK",o[o.DLSETTINGS_OPTNEG_POS=7]="DLSETTINGS_OPTNEG_POS",o[o.RXDELAY_DEL_MASK=15]="RXDELAY_DEL_MASK",o[o.RXDELAY_DEL_POS=0]="RXDELAY_DEL_POS",o))(P||{});function I(D,t,n){return a(D.slice(t,n))}function d(D,t){const n=T[t],r={};for(const h in n)n.hasOwnProperty(h)&&(r[h]=I(D,n[h].start,n[h].end));return r}class R{static fromWire(t){const n=new R;return n._initfromWire(t),n}static fromFields(t,n,r,h,l,f){l||(l=i.alloc(2,0));const s=new R;if(s._initFromFields(t),s.isDataMessage()){const C=s.getFPort();if(C!==null&&(C===0&&r?.length===16||C>0&&n?.length===16)){let y;C===0&&r?.length===16&&n?.length===16&&h?.length===16?y=F(s,void 0,n,l):y=F(s,n,r,l),s.FRMPayload=y,s._mergeGroupFields(),r?.length===16&&(p(s,r,h,l,f),s._mergeGroupFields())}}else if(s._getMType()===0)h?.length===16&&(p(s,r,h,l),s._mergeGroupFields());else if(s._getMType()===1&&h?.length===16){p(s,r,h,l),s._mergeGroupFields();const C=u(s,h);s.MACPayloadWithMIC&&C.copy(s.MACPayloadWithMIC)}return s}assignFromStructuredBuffer(t,n){const r=d(t,n);Object.assign(this,r)}_initfromWire(t){const n=i.from(t);this.PHYPayload=n,this.MHDR=n.slice(0,1),this.MACPayload=n.slice(1,n.length-4),this.MACPayloadWithMIC=n.slice(1,n.length),this.MIC=n.slice(n.length-4);const r=this._getMType();if(r==0){if(n.length<5+18)throw new Error("contents too short for a Join Request");this.assignFromStructuredBuffer(n,"JOIN_REQUEST")}else if(r==1){if(n.length<5+12)throw new Error("contents too short for a Join Accept");this.assignFromStructuredBuffer(n,"JOIN_ACCEPT"),this.JoinReqType=i.from([255]),n.length==13+16+4?this.CFList=n.slice(13,13+16):this.CFList=i.alloc(0)}else if(r==6){if(this.RejoinType=n.slice(1,1+1),this.RejoinType[0]===0||this.RejoinType[0]===2){if(n.length<5+14)throw new Error("contents too short for a Rejoin Request (Type 0/2)");this.assignFromStructuredBuffer(n,"REJOIN_TYPE_1")}else if(this.RejoinType[0]===1){if(n.length<5+19)throw new Error("contents too short for a Rejoin Request (Type 1)");this.assignFromStructuredBuffer(n,"REJOIN_TYPE_2")}}else if(this.isDataMessage()){this.DevAddr=a(n.slice(1,5)),this.FCtrl=a(n.slice(5,6)),this.FCnt=a(n.slice(6,8));const l=this.FCtrl.readInt8(0)&15;this.FOpts=n.slice(8,8+l);const f=7+l;this.FHDR=n.slice(1,1+f),f==this.MACPayload.length?(this.FPort=i.alloc(0),this.FRMPayload=i.alloc(0)):(this.FPort=n.slice(f+1,f+2),this.FRMPayload=n.slice(f+2,n.length-4))}}_initFromFields(t){if(typeof t.MType<"u"){let n;if(typeof t.MType=="number")n=t.MType;else if(typeof t.MType=="string"){const r=c[t.MType];if(r>=0)n=r;else throw new Error("MType is unknown")}else throw new Error("MType is required in a suitable format");n==0?this._initialiseJoinRequestPacketFromFields(t):n==1?this._initialiseJoinAcceptPacketFromFields(t):this._initialiseDataPacketFromFields(t)}else if(t.DevAddr&&typeof t.payload<"u")this._initialiseDataPacketFromFields(t);else if(t.AppEUI&&t.DevEUI&&t.DevNonce)this._initialiseJoinRequestPacketFromFields(t);else if(t.AppNonce&&t.NetID&&t.DevAddr)this._initialiseJoinAcceptPacketFromFields(t);else throw new Error("No plausible packet")}_mergeGroupFields(){this.MHDR&&this.MIC&&(this._getMType()===0&&this.AppEUI&&this.DevEUI&&this.DevNonce?(this.MACPayload=i.concat([a(this.AppEUI),a(this.DevEUI),a(this.DevNonce)]),this.PHYPayload=i.concat([this.MHDR,this.MACPayload,this.MIC]),this.MACPayloadWithMIC=this.PHYPayload.slice(this.MHDR.length,this.PHYPayload.length)):this._getMType()===1&&this.AppNonce&&this.NetID&&this.DevAddr&&this.DLSettings&&this.RxDelay&&this.CFList?(this.MACPayload=i.concat([a(this.AppNonce),a(this.NetID),a(this.DevAddr),this.DLSettings,this.RxDelay,this.CFList]),this.PHYPayload=i.concat([this.MHDR,this.MACPayload,this.MIC]),this.MACPayloadWithMIC=this.PHYPayload.slice(this.MHDR.length,this.PHYPayload.length)):this.FCtrl&&this.DevAddr&&this.FPort&&this.FCnt&&this.FRMPayload&&this.FOpts&&(this.FHDR=i.concat([a(this.DevAddr),this.FCtrl,a(this.FCnt),this.FOpts]),this.MACPayload=i.concat([this.FHDR,this.FPort,this.FRMPayload]),this.PHYPayload=i.concat([this.MHDR,this.MACPayload,this.MIC]),this.MACPayloadWithMIC=this.PHYPayload.slice(this.MHDR.length,this.PHYPayload.length)))}_initialiseDataPacketFromFields(t){if(t.DevAddr&&t.DevAddr.length==4)this.DevAddr=i.from(t.DevAddr);else throw new Error("DevAddr is required in a suitable format");if(typeof t.payload=="string"?this.FRMPayload=i.from(t.payload):t.payload instanceof i&&(this.FRMPayload=i.from(t.payload)),typeof t.MType<"u")if(typeof t.MType=="number")this.MHDR=i.alloc(1),this.MHDR.writeUInt8(t.MType<<5,0);else if(typeof t.MType=="string"){const r=c[t.MType];if(r>=0)this.MHDR=i.alloc(1),this.MHDR.writeUInt8(r<<5,0);else throw new Error("MType is unknown")}else throw new Error("MType is required in a suitable format");if(t.FCnt)if(t.FCnt instanceof i&&t.FCnt.length==2)this.FCnt=i.from(t.FCnt);else if(typeof t.FCnt=="number")this.FCnt=i.alloc(2),this.FCnt.writeUInt16BE(t.FCnt,0);else throw new Error("FCnt is required in a suitable format");if(typeof t.FOpts<"u"){if(typeof t.FOpts=="string")this.FOpts=i.from(t.FOpts,"hex");else if(t.FOpts instanceof i)this.FOpts=i.from(t.FOpts);else throw new Error("FOpts is required in a suitable format");if(15<this.FOpts.length)throw new Error("Too many options for piggybacking")}else this.FOpts=i.from("","hex");let n=0;t.FCtrl?.ADR&&(n|=128),t.FCtrl?.ADRACKReq&&(n|=64),t.FCtrl?.ACK&&(n|=32),t.FCtrl?.FPending&&(n|=16),n|=this.FOpts.length&15,this.FCtrl=i.alloc(1),this.FCtrl.writeUInt8(n,0),!isNaN(t.FPort)&&t.FPort>=0&&t.FPort<=255&&(this.FPort=i.alloc(1),this.FPort.writeUInt8(t.FPort,0)),this?.MHDR||(this.MHDR=i.alloc(1),this.MHDR.writeUInt8(64,0)),this?.FPort==null&&(this?.FRMPayload&&this.FRMPayload.length>0?this.FPort=i.from("01","hex"):this.FPort=i.alloc(0)),!this?.FPort==null&&(this.FPort=i.from("01","hex")),this.FCnt||(this.FCnt=i.from("0000","hex")),this.MIC||(this.MIC=i.from("EEEEEEEE","hex")),this._mergeGroupFields()}_initialiseJoinRequestPacketFromFields(t){if(t.AppEUI&&t.AppEUI.length==8)this.AppEUI=i.from(t.AppEUI);else throw new Error("AppEUI is required in a suitable format");if(t.DevEUI&&t.DevEUI.length==8)this.DevEUI=i.from(t.DevEUI);else throw new Error("DevEUI is required in a suitable format");if(t.DevNonce&&t.DevNonce.length==2)this.DevNonce=i.from(t.DevNonce);else throw new Error("DevNonce is required in a suitable format");if(t.FCnt)if(t.FCnt instanceof i&&t.FCnt.length==2)this.FCnt=i.from(t.FCnt);else if(typeof t.FCnt=="number")this.FCnt=i.alloc(2),this.FCnt.writeUInt16BE(t.FCnt,0);else throw new Error("FCnt is required in a suitable format");this.MHDR=i.alloc(1),this.MHDR.writeUInt8(0,0),this.MIC||(this.MIC=i.from("EEEEEEEE","hex")),this._mergeGroupFields()}_initialiseJoinAcceptPacketFromFields(t){if(t.AppNonce&&t.AppNonce.length==3)this.AppNonce=i.from(t.AppNonce);else throw new Error("AppNonce is required in a suitable format");if(t.NetID&&t.NetID.length==3)this.NetID=i.from(t.NetID);else throw new Error("NetID is required in a suitable format");if(t.DevAddr&&t.DevAddr.length==4)this.DevAddr=i.from(t.DevAddr);else throw new Error("DevAddr is required in a suitable format");if(t.DLSettings)if(t.DLSettings instanceof i&&t.DLSettings.length==1)this.DLSettings=i.from(t.DLSettings);else if(typeof t.DLSettings=="number")this.DLSettings=i.alloc(1),this.DLSettings.writeUInt8(t.DLSettings,0);else throw new Error("DLSettings is required in a suitable format");if(t.RxDelay)if(t.RxDelay instanceof i&&t.RxDelay.length==1)this.RxDelay=i.from(t.RxDelay);else if(typeof t.RxDelay=="number")this.RxDelay=i.alloc(1),this.RxDelay.writeUInt8(t.RxDelay,0);else throw new Error("RxDelay is required in a suitable format");if(t.CFList)if(t.CFList instanceof i&&(t.CFList.length==0||t.CFList.length==16))this.CFList=i.from(t.CFList);else throw new Error("CFList is required in a suitable format");if(!t.JoinReqType)this.JoinReqType=i.from("ff","hex");else if(t.JoinReqType instanceof i&&t.JoinReqType.length==1)this.JoinReqType=i.from(t.JoinReqType);else if(typeof t.JoinReqType=="number")this.JoinReqType=i.alloc(1),this.JoinReqType.writeUInt8(t.JoinReqType,0);else throw new Error("JoinReqType is required in a suitable format");if(t.AppEUI&&t.AppEUI.length==8)this.AppEUI=i.from(t.AppEUI);else if(this.getDLSettingsOptNeg())throw new Error("AppEUI/JoinEUI is required in a suitable format");if(t.DevNonce&&t.DevNonce.length==2)this.DevNonce=i.from(t.DevNonce);else if(this.getDLSettingsOptNeg())throw new Error("DevNonce is required in a suitable format");this.DLSettings||(this.DLSettings=i.from("00","hex")),this.RxDelay||(this.RxDelay=i.from("00","hex")),this.CFList||(this.CFList=i.from("","hex")),this.MHDR=i.alloc(1),this.MHDR.writeUInt8(32,0),this.MIC||(this.MIC=i.from("EEEEEEEE","hex")),this._mergeGroupFields()}_getMType(){return this.MHDR?(this.MHDR.readUInt8(0)&255)>>5:-1}isDataMessage(){const t=this._getMType();return t>=2&&t<=5}isConfirmed(){const t=this._getMType();return t===5||t===4}getMType(){return g[this._getMType()]||"Proprietary"}getDir(){const t=this._getMType();return t>5?null:t%2==0?"up":"down"}getFPort(){return this.FPort&&this.FPort.length?this.FPort.readUInt8(0):null}getFCnt(){return this.FCnt?this.FCnt.readUInt16BE(0):null}getFCtrlACK(){return this.FCtrl?!!(this.FCtrl.readUInt8(0)&32):null}getFCtrlADR(){return this.FCtrl?!!(this.FCtrl.readUInt8(0)&128):null}getFCtrlADRACKReq(){return this.FCtrl?!!(this.FCtrl.readUInt8(0)&64):null}getFCtrlFPending(){return this.FCtrl?!!(this.FCtrl.readUInt8(0)&16):null}getDLSettingsRxOneDRoffset(){return this.DLSettings?(this.DLSettings.readUInt8(0)&112)>>4:null}getDLSettingsRxTwoDataRate(){return this.DLSettings?(this.DLSettings.readUInt8(0)&15)>>0:null}getDLSettingsOptNeg(){return this.DLSettings?(this.DLSettings.readUInt8(0)&128)>>7===1:null}getRxDelayDel(){return this.RxDelay?(this.RxDelay.readUInt8(0)&15)>>0:null}getCFListFreqChFour(){return this.CFList&&this.CFList.length===16?a(this.CFList.slice(0,3)):i.alloc(0)}getCFListFreqChFive(){return this.CFList&&this.CFList.length===16?a(this.CFList.slice(3,3+3)):i.alloc(0)}getCFListFreqChSix(){return this.CFList&&this.CFList.length===16?a(this.CFList.slice(6,6+3)):i.alloc(0)}getCFListFreqChSeven(){return this.CFList&&this.CFList.length===16?a(this.CFList.slice(9,9+3)):i.alloc(0)}getCFListFreqChEight(){return this.CFList&&this.CFList.length===16?a(this.CFList.slice(12,12+3)):i.alloc(0)}getBuffers(){return this}decryptFOpts(t,n,r,h){return this.encryptFOpts(t,n,r,h)}encryptFOpts(t,n,r,h){if(!this.FOpts)return i.alloc(0);if(!t||t?.length!==16)throw new Error("NwkSEncKey must be 16 bytes");return this.FOpts=E(this,t,r),this._mergeGroupFields(),n?.length===16&&(p(this,n,void 0,r,h),this._mergeGroupFields()),this.FOpts}getPHYPayload(){return this.PHYPayload}isJoinRequestMessage(){return this._getMType()==0}isRejoinRequestMessage(){return this._getMType()==6}isReJoinRequestMessage(){return this._getMType()==6}isJoinAcceptMessage(){return this._getMType()==1}toString(){let t="";return this.isJoinRequestMessage()?(t+=`          Message Type = Join Request
`,t+="            PHYPayload = "+e(this.PHYPayload).toUpperCase()+`
`,t+=`
`,t+=`          ( PHYPayload = MHDR[1] | MACPayload[..] | MIC[4] )
`,t+="                  MHDR = "+e(this.MHDR)+`
`,t+="            MACPayload = "+e(this.MACPayload)+`
`,t+="                   MIC = "+e(this.MIC)+`
`,t+=`
`,t+=`          ( MACPayload = AppEUI[8] | DevEUI[8] | DevNonce[2] )
`,t+="                AppEUI = "+e(this.AppEUI)+`
`,t+="                DevEUI = "+e(this.DevEUI)+`
`,t+="              DevNonce = "+e(this.DevNonce)+`
`):this.isJoinAcceptMessage()?(t+=`          Message Type = Join Accept
`,t+="            PHYPayload = "+e(this.PHYPayload).toUpperCase()+`
`,t+=`
`,t+=`          ( PHYPayload = MHDR[1] | MACPayload[..] | MIC[4] )
`,t+="                  MHDR = "+e(this.MHDR)+`
`,t+="            MACPayload = "+e(this.MACPayload)+`
`,t+="                   MIC = "+e(this.MIC)+`
`,t+=`
`,t+=`          ( MACPayload = AppNonce[3] | NetID[3] | DevAddr[4] | DLSettings[1] | RxDelay[1] | CFList[0|15] )
`,t+="              AppNonce = "+e(this.AppNonce)+`
`,t+="                 NetID = "+e(this.NetID)+`
`,t+="               DevAddr = "+e(this.DevAddr)+`
`,t+="            DLSettings = "+e(this.DLSettings)+`
`,t+="               RxDelay = "+e(this.RxDelay)+`
`,t+="                CFList = "+e(this.CFList)+`
`,t+=`
`,t+="DLSettings.RX1DRoffset = "+this.getDLSettingsRxOneDRoffset()+`
`,t+="DLSettings.RX2DataRate = "+this.getDLSettingsRxTwoDataRate()+`
`,t+="           RxDelay.Del = "+this.getRxDelayDel()+`
`,t+=`
`,this.CFList.length===16&&(t+=`              ( CFList = FreqCh4[3] | FreqCh5[3] | FreqCh6[3] | FreqCh7[3] | FreqCh8[3] )
`,t+="               FreqCh4 = "+e(this.getCFListFreqChFour())+`
`,t+="               FreqCh5 = "+e(this.getCFListFreqChFive())+`
`,t+="               FreqCh6 = "+e(this.getCFListFreqChSix())+`
`,t+="               FreqCh7 = "+e(this.getCFListFreqChSeven())+`
`,t+="               FreqCh8 = "+e(this.getCFListFreqChEight())+`
`)):this.isRejoinRequestMessage()?(t+=`          Message Type = ReJoin Request
`,t+="            PHYPayload = "+e(this.PHYPayload).toUpperCase()+`
`,t+=`
`,t+=`          ( PHYPayload = MHDR[1] | MACPayload[..] | MIC[4] )
`,t+="                  MHDR = "+e(this.MHDR)+`
`,t+="            MACPayload = "+e(this.MACPayload)+`
`,t+="                   MIC = "+e(this.MIC)+`
`,t+=`
`,this.RejoinType[0]===0||this.RejoinType[0]===2?(t+=`          ( MACPayload = RejoinType[1] | NetID[3] | DevEUI[8] | RJCount0[2] )
`,t+="            RejoinType = "+e(this.RejoinType)+`
`,t+="                 NetID = "+e(this.NetID)+`
`,t+="                DevEUI = "+e(this.DevEUI)+`
`,t+="              RJCount0 = "+e(this.RJCount0)+`
`):this.RejoinType[0]===1&&(t+=`          ( MACPayload = RejoinType[1] | JoinEUI[8] | DevEUI[8] | RJCount0[2] )
`,t+="            RejoinType = "+e(this.RejoinType)+`
`,t+="               JoinEUI = "+e(this.JoinEUI)+`
`,t+="                DevEUI = "+e(this.DevEUI)+`
`,t+="              RJCount0 = "+e(this.RJCount0)+`
`)):this.isDataMessage()&&(t+=`Message Type = Data
`,t+="            PHYPayload = "+e(this.PHYPayload).toUpperCase()+`
`,t+=`
`,t+=`          ( PHYPayload = MHDR[1] | MACPayload[..] | MIC[4] )
`,t+="                  MHDR = "+e(this.MHDR)+`
`,t+="            MACPayload = "+e(this.MACPayload)+`
`,t+="                   MIC = "+e(this.MIC)+`
`,t+=`
`,t+=`          ( MACPayload = FHDR | FPort | FRMPayload )
`,t+="                  FHDR = "+e(this.FHDR)+`
`,t+="                 FPort = "+e(this.FPort)+`
`,t+="            FRMPayload = "+e(this.FRMPayload)+`
`,t+=`
`,t+=`                ( FHDR = DevAddr[4] | FCtrl[1] | FCnt[2] | FOpts[0..15] )
`,t+="               DevAddr = "+e(this.DevAddr)+` (Big Endian)
`,t+="                 FCtrl = "+e(this.FCtrl)+`
`,t+="                  FCnt = "+e(this.FCnt)+` (Big Endian)
`,t+="                 FOpts = "+e(this.FOpts)+`
`,t+=`
`,t+="          Message Type = "+this.getMType()+`
`,t+="             Direction = "+this.getDir()+`
`,t+="                  FCnt = "+this.getFCnt()+`
`,t+="             FCtrl.ACK = "+this.getFCtrlACK()+`
`,t+="             FCtrl.ADR = "+this.getFCtrlADR()+`
`,this._getMType()==5||this._getMType()==3?t+="        FCtrl.FPending = "+this.getFCtrlFPending()+`
`:t+="       FCtrl.ADRACKReq = "+this.getFCtrlADRACKReq()+`
`),t}toObject(){let t={};return this.isJoinRequestMessage()?t={MType:"Join Request",PHYPayload:e(this.PHYPayload).toUpperCase(),MHDR:e(this.MHDR),MACPayload:e(this.MACPayload),MIC:e(this.MIC),RejoinType:this.RejoinType,AppEUI:e(this.AppEUI),DevEUI:e(this.DevEUI),DevNonce:e(this.DevNonce)}:this.isJoinAcceptMessage()?this.CFList.length===16?t={MType:"Join Accept",PHYPayload:e(this.PHYPayload).toUpperCase(),MHDR:e(this.MHDR),MACPayload:e(this.MACPayload),MIC:e(this.MIC),AppNonce:e(this.AppNonce),NetID:e(this.NetID),DevAddr:e(this.DevAddr),DLSettings:e(this.DLSettings),RxDelay:e(this.RxDelay),CFList:e(this.CFList),DLSettingsRX1DRoffset:this.getDLSettingsRxOneDRoffset(),DLSettingsRX2DataRate:this.getDLSettingsRxTwoDataRate(),RxDelayDel:this.getRxDelayDel(),FreqCh4:e(this.getCFListFreqChFour()),FreqCh5:e(this.getCFListFreqChFive()),FreqCh6:e(this.getCFListFreqChSix()),FreqCh7:e(this.getCFListFreqChSeven()),FreqCh8:e(this.getCFListFreqChEight())}:t={MType:"Join Accept",PHYPayload:e(this.PHYPayload).toUpperCase(),MHDR:e(this.MHDR),MACPayload:e(this.MACPayload),MIC:e(this.MIC),AppNonce:e(this.AppNonce),NetID:e(this.NetID),DevAddr:e(this.DevAddr),DLSettings:e(this.DLSettings),RxDelay:e(this.RxDelay),CFList:e(this.CFList),DLSettingsRX1DRoffset:this.getDLSettingsRxOneDRoffset(),DLSettingsRX2DataRate:this.getDLSettingsRxTwoDataRate(),RxDelayDel:this.getRxDelayDel()}:this.isRejoinRequestMessage()?(t={MType:"ReJoin Request",PHYPayload:e(this.PHYPayload).toUpperCase(),MHDR:e(this.MHDR),MACPayload:e(this.MACPayload),MIC:e(this.MIC)},this.RejoinType[0]===0||this.RejoinType[0]===2?Object.assign(t,{RejoinType:e(this.RejoinType),NetID:e(this.NetID),DevEUI:e(this.DevEUI),RJCount0:e(this.RJCount0)}):this.RejoinType[0]===1&&Object.assign(t,{RejoinType:e(this.RejoinType),JoinEUI:e(this.JoinEUI),DevEUI:e(this.DevEUI),RJCount0:e(this.RJCount0)})):this.isDataMessage()&&(t={MType:this.getMType(),PHYPayload:e(this.PHYPayload).toUpperCase(),MHDR:e(this.MHDR),MACPayload:e(this.MACPayload),MIC:e(this.MIC),FHDR:e(this.FHDR),FPort:e(this.FPort),FRMPayload:e(this.FRMPayload),DevAddr:e(this.DevAddr),FCtrl:e(this.FCtrl),FCntHex:e(this.FCnt),FOpts:e(this.FOpts),Direction:this.getDir(),FCountUInt16:this.getFCnt(),FCtrlACK:this.getFCtrlACK(),FCtrlADR:this.getFCtrlADR()},this._getMType()==5||this._getMType()==3?Object.assign(t,{FCtrlFPending:this.getFCtrlFPending()}):Object.assign(t,{FCtrlADRACKReq:this.getFCtrlADRACKReq()})),t}get JoinEUI(){return this.AppEUI}set JoinEUI(t){this.AppEUI=t}get JoinNonce(){return this.AppNonce}set JoinNonce(t){this.AppNonce=t}PHYPayload;MHDR;MACPayload;MACPayloadWithMIC;AppEUI;DevEUI;DevNonce;MIC;AppNonce;NetID;DevAddr;DLSettings;RxDelay;CFList;FCtrl;FOpts;FCnt;FHDR;FPort;FRMPayload;JoinReqType;RejoinType;RJCount0;RJCount1}var m=R;export{M as LorawanVersion,m as default};
